<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jims.clinic.dao.OutpOrdersDao">
    
	<sql id="outpOrdersColumns">
		a.id AS "id",
		a.clinic_id AS "clinicId",
		a.org_id AS "orgId",
		a.patient_id AS "patientId",
		a.visit_date AS "visitDate",
		a.visit_no AS "visitNo",
		a.serial_no AS "serialNo",
		a.ordered_by AS "orderedBy",
		a.doctor AS "doctor",
		a.order_date AS "orderDate",
		a.clinic_no AS "clinicNo",
		a.doctor_no AS "doctorNo",
		a.nurse AS "nurse",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	<sql id="outpOrdersColumnsFy">
		a.id AS "id",
		a.clinic_id AS "clinicId",
		a.org_id AS "orgId",
		a.patient_id AS "patientId",
		a.visit_date AS "visitDate",
		a.visit_no   AS "visitNo",
		a.serial_no  AS "serialNo",
		(select dept_name from dept_dict where dept_code=a.ordered_by) AS "orderedBy",
		a.doctor     AS "doctor",
		a.order_date AS "orderDate",
		a.clinic_no  AS "clinicNo",
		a.doctor_no  AS "doctorNo",
		a.nurse      AS "nurse"
	</sql>


	<sql id="outpOrdersJoins">
	</sql>
    
	<select id="get" resultType="OutpOrders">
		SELECT 
			<include refid="outpOrdersColumns"/>
		FROM outp_orders a
		<include refid="outpOrdersJoins"/>
		WHERE a.id = #{id}
	</select>


	<select id="getByClinicId" resultType="OutpOrders">
		SELECT
		<include refid="outpOrdersColumns"/>
		FROM outp_orders a
		<include refid="outpOrdersJoins"/>
		WHERE a.patient_id = #{clinicId}
	</select>

	<select id="findList" resultType="OutpOrders">
		SELECT 
			<include refid="outpOrdersColumns"/>
		FROM outp_orders a
		<include refid="outpOrdersJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OutpOrders">
		SELECT 
			<include refid="outpOrdersColumns"/>
		FROM outp_orders a
		<include refid="outpOrdersJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO outp_orders(

		<if test="patientId!=null and patientId!=''">
			patient_id,
		</if>
		<if test="clinicId!=null and clinicId!=''">
			clinic_id,
		</if>
		<if test="orgId!=null and orgId!=''">
			org_id,
		</if>
		<if test="visitDate!=null">
			visit_date,
		</if>
		<if test="visitNo!=null">
			visit_no,
		</if>
		<if test="serialNo!=null">
			serial_no,
		</if>
		<if test="orderedBy!=null">
			ordered_by,
		</if>
		<if test="doctor!=null">
			doctor,
		</if>
		<if test="orderDate!=null">
			order_date,
		</if>
		<if test="clinicNo!=null">
			clinic_no,
		</if>
		<if test="nurse!=null">
			nurse,
		</if>
		<if test="doctorNo!=null">
			doctor_no,
		</if>
		id
		) VALUES (

		<if test="patientId!=null and patientId!=''">
			#{patientId},
		</if>
		<if test="clinicId!=null and clinicId!=''">
			#{clinicId},
		</if>
		<if test="orgId!=null and orgId!=''">
			orgId,
		</if>
		<if test="visitDate!=null">
			#{visitDate},
		</if>
		<if test="visitNo!=null">
			#{visitNo},
		</if>
		<if test="serialNo!=null">
			#{serialNo},
		</if>
		<if test="orderedBy!=null">
			#{orderedBy},
		</if>
		<if test="doctor!=null">
			#{doctor},
		</if>
		<if test="orderDate!=null">
			#{orderDate},
		</if>
		<if test="clinicNo!=null">
			#{clinicNo},
		</if>
		<if test="nurse!=null">
			#{nurse},
		</if>
		<if test="doctorNo!=null">
			#{doctorNo},
		</if>
		#{id}
		)
	</insert>
	
	<update id="update">
		UPDATE outp_orders SET 	
			patient_id = #{patientId},
			visit_date = #{visitDate},
			visit_no = #{visitNo},
			serial_no = #{serialNo},
			ordered_by = #{orderedBy},
			doctor = #{doctor},
			order_date = #{orderDate},
			clinic_no = #{clinicNo},
			doctor_no = #{doctorNo},
			nurse = #{nurse},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE outp_orders SET 
			del_flag = '1'
		WHERE a.visit_no=#{visitNo}
	</update>
	<select id="getSerialNo" resultType="OutpOrders">
		select  outp_order_serial_no.Nextval from dual
	</select>

	<select id="findListFy" resultType="OutpOrders">
		SELECT
		<include refid="outpOrdersColumnsFy"/>
		FROM outp_orders a
		<where>
			<trim suffixOverrides="AND">
				<if test="visitDate != null">
					a.visit_date = #{visitDate} AND
				</if>
				<if test="visitNo != null">
					a.visit_no =#{visitNo} AND
				</if>
			</trim>
		</where>
	</select>

	<insert id="saveOutpOrders">
	INSERT INTO outp_orders(
	id,
	patient_id,
	clinic_id,
	org_id,
	visit_date,
	visit_no,
	serial_no,
	ordered_by,
	doctor,
	order_date,
	clinic_no,
	doctor_no,
	nurse
	) VALUES (
	#{id},
	#{patientId},
	#{clinicId},
	#{orgId},
	#{visitDate},
	#{visitNo},
	#{serialNo},
	#{orderedBy},
	#{doctor},
	#{orderDate},
	#{clinicNo},
	#{doctorNo},
	#{nurse}
	)
	</insert>

	<update id="deleteOutpOrders">
		UPDATE outp_orders  a SET
		del_flag = '1'
		WHERE a.serial_no=#{serialNo}
	</update>
</mapper>