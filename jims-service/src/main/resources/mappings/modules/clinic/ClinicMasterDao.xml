<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jims.clinic.dao.ClinicMasterDao">
    
	<sql id="clinicMasterColumns">
		a.id AS "id",
		a.org_id AS "orgId",
		a.visit_date AS "visitDate",
		a.visit_no AS "visitNo",
		a.clinic_label AS "clinicLabel",
		a.visit_time_desc AS "visitTimeDesc",
		a.serial_no AS "serialNo",
		a.name AS "name",
		a.name_phonetic AS "namePhonetic",
		a.sex AS "sex",
		a.age AS "age",
		a.identity AS "identity",
		a.charge_type AS "chargeType",
		a.insurance_type AS "insuranceType",
		a.insurance_no AS "insuranceNo",
		a.unit_in_contract AS "unitInContract",
		a.clinic_type AS "clinicType",
		a.first_visit_indicator AS "firstVisitIndicator",
		a.visit_dept AS "visitDept",
		a.visit_special_clinic AS "visitSpecialClinic",
		a.doctor AS "doctor",
		a.mr_provide_indicator AS "mrProvideIndicator",
		a.registration_status AS "registrationStatus",
		a.registering_date AS "registeringDate",
		a.symptom AS "symptom",
		a.regist_fee AS "registFee",
		a.clinic_fee AS "clinicFee",
		a.other_fee AS "otherFee",
		a.clinic_charge AS "clinicCharge",
		a.operator AS "operator",
		a.returned_date AS "returnedDate",
		a.returned_operator AS "returnedOperator",
		a.mode_code AS "modeCode",
		a.card_name AS "cardName",
		a.card_no AS "cardNo",
		a.acct_date_time AS "acctDateTime",
		a.acct_no AS "acctNo",
		a.pay_way AS "payWay",
		a.mr_provided_indicator AS "mrProvidedIndicator",
		a.invoice_no AS "invoiceNo",
		a.clinic_no AS "clinicNo",
		a.mr_no AS "mrNo",
		a.isprn AS "isprn",
		a.pat_type AS "patType",
		a.valid_date AS "validDate",
		a.auto_flag AS "autoFlag",
		a.print_operator AS "printOperator",
		a.pe_visit_id AS "peVisitId",
		a.mailing_address AS "mailingAddress",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="clinicMasterJoins">
	</sql>
    
	<select id="get" resultType="ClinicMaster">
		SELECT 
			<include refid="clinicMasterColumns"/>
		FROM clinic_master a
		<include refid="clinicMasterJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ClinicMaster">
		SELECT 
			<include refid="clinicMasterColumns"/>
		FROM clinic_master a
		<include refid="clinicMasterJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ClinicMaster">
		SELECT 
			<include refid="clinicMasterColumns"/>
		FROM clinic_master a
		<include refid="clinicMasterJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<insert id="insert">
		INSERT INTO clinic_master(
			id,
			org_id,
			patient_id,
			visit_date,
			visit_no,
			clinic_label,
			visit_time_desc,
			serial_no,
			name,
			name_phonetic,
			sex,
			age,
			identity,
			charge_type,
			insurance_type,
			insurance_no,
			unit_in_contract,
			clinic_type,
			first_visit_indicator,
			visit_dept,
			visit_special_clinic,
			doctor,
			mr_provide_indicator,
			registration_status,
			registering_date,
			symptom,
			regist_fee,
			clinic_fee,
			other_fee,
			clinic_charge,
			operator,
			returned_date,
			returned_operator,
			mode_code,
			card_name,
			card_no,
			acct_date_time,
			acct_no,
			pay_way,
			mr_provided_indicator,
			invoice_no,
			clinic_no,
			mr_no,
			isprn,
			pat_type,
			valid_date,
			auto_flag,
			print_operator,
			pe_visit_id,
			mailing_address,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{orgId},
			#{patientId},
			#{visitDate},
			#{visitNo},
			#{clinicLabel},
			#{visitTimeDesc},
			#{serialNo},
			#{name},
			#{namePhonetic},
			#{sex},
			#{age},
			#{identity},
			#{chargeType},
			#{insuranceType},
			#{insuranceNo},
			#{unitInContract},
			#{clinicType},
			#{firstVisitIndicator},
			#{visitDept},
			#{visitSpecialClinic},
			#{doctor},
			#{mrProvideIndicator},
			#{registrationStatus},
			#{registeringDate},
			#{symptom},
			#{registFee},
			#{clinicFee},
			#{otherFee},
			#{clinicCharge},
			#{operator},
			#{returnedDate},
			#{returnedOperator},
			#{modeCode},
			#{cardName},
			#{cardNo},
			#{acctDateTime},
			#{acctNo},
			#{payWay},
			#{mrProvidedIndicator},
			#{invoiceNo},
			#{clinicNo},
			#{mrNo},
			#{isprn},
			#{patType},
			#{validDate},
			#{autoFlag},
			#{printOperator},
			#{peVisitId},
			#{mailingAddress},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	<update id="updateMasterInfo">
		update clinic_master SET
			name = #{name},
			sex=#{sex},
			identity = #{identity},
			charge_type = #{chargeType},
			unit_in_contract = #{unitInContract}

		where id=#{id}
	</update>
	<update id="update">
		UPDATE clinic_master SET
			org_id = #{orgId},
			visit_date = #{visitDate},
			visit_no = #{visitNo},
			clinic_label = #{clinicLabel},
			visit_time_desc = #{visitTimeDesc},
			serial_no = #{serialNo},
			name = #{name},
			name_phonetic = #{namePhonetic},
			sex = #{sex},
			age = #{age},
			identity = #{identity},
			charge_type = #{chargeType},
			insurance_type = #{insuranceType},
			insurance_no = #{insuranceNo},
			unit_in_contract = #{unitInContract},
			clinic_type = #{clinicType},
			first_visit_indicator = #{firstVisitIndicator},
			visit_dept = #{visitDept},
			visit_special_clinic = #{visitSpecialClinic},
			doctor = #{doctor},
			mr_provide_indicator = #{mrProvideIndicator},
			registration_status = #{registrationStatus},
			registering_date = #{registeringDate},
			symptom = #{symptom},
			regist_fee = #{registFee},
			clinic_fee = #{clinicFee},
			other_fee = #{otherFee},
			clinic_charge = #{clinicCharge},
			operator = #{operator},
			returned_date = #{returnedDate},
			returned_operator = #{returnedOperator},
			mode_code = #{modeCode},
			card_name = #{cardName},
			card_no = #{cardNo},
			acct_date_time = #{acctDateTime},
			acct_no = #{acctNo},
			pay_way = #{payWay},
			mr_provided_indicator = #{mrProvidedIndicator},
			invoice_no = #{invoiceNo},
			clinic_no = #{clinicNo},
			mr_no = #{mrNo},
			isprn = #{isprn},
			pat_type = #{patType},
			valid_date = #{validDate},
			auto_flag = #{autoFlag},
			print_operator = #{printOperator},
			pe_visit_id = #{peVisitId},
			mailing_address = #{mailingAddress},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	<update id="delete">
		UPDATE clinic_master SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
    <select id="getMaxVisitNO" resultType="Integer">
      select max(visit_no) from clinic_master where visit_date=TRUNC(CURRENT_DATE,'DD')
	</select>
	<select id="getClinicBydoctor" resultType="ClinicMaster">
		SELECT <include refid="clinicMasterColumns"/>
		FROM clinic_master a
		WHERE 1=1
		AND a.registration_status='1'
		<if test="visitDept!=null and visitDept!='' and visitDept!='undefined' ">
			AND a.visit_dept=#{visitDept}
		</if>
		AND a.returned_date is null
	</select>

	<select id="getClinicMasterDiagnosed" resultType="ClinicMaster">
		SELECT <include refid="clinicMasterColumns"/>
		FROM clinic_master a
		WHERE 1=1
		AND a.registration_status='2'
		<if test="visitDept!=null and visitDept!='' and visitDept!='undefined' ">
			AND a.visit_dept=#{visitDept}
		</if>
	</select>

	<select id="getClinicMaster" resultType="com.jims.clinic.entity.ClinicMaster">
		SELECT <include refid="clinicMasterColumns"/>
		FROM clinic_master a
		WHERE 1=1
		<if test="visitDate!=null and visitDate!=''">
			AND   a.visit_date = to_date(#{visitDate},'yyyy-mm-dd')
	   </if>
		<if test="visitNo!=null and visitNo!=''">
		   AND 	a.visit_no=#{visitNo}
		</if>
	</select>
	<select id="updateClinicMasterByReturn">
		UPDATE "CLINIC_MASTER" SET "RETURNED_DATE" = #{returnedDate}, "RETURNED_OPERATOR" = #{returnedOperator}
		WHERE "VISIT_DATE" = to_date(#{visitDate},'yyyy-MM-dd')  AND "VISIT_NO" = #{visitNo}
	</select>


    <select id="getClinicMasterCost" resultType="com.jims.common.web.impl.BaseDto">
        SELECT <include refid="clinicMasterColumns"/>
        FROM clinic_master a
        WHERE  a.org_id = #{orgId} AND 	a.clinic_no=#{clinicNo}
    </select>
    <select id="getClinicMasterCostAll" resultType="com.jims.common.web.impl.BaseDto">
        SELECT "OUTP_PRESC"."ID" id,to_char("OUTP_PRESC"."VISIT_DATE",'yyyy-mm-dd hh24:mi:ss') visit_date,
               "OUTP_PRESC"."VISIT_NO" visit_no,
               (select patient_id
                  from outp_orders
                 where serial_no = OUTP_PRESC.SERIAL_NO) patient_id,
               (select doctor_no
                  from outp_orders
                 where serial_no = OUTP_PRESC.SERIAL_NO) doctor_no,
               (select clinic_no
                  from outp_orders
                 where serial_no = OUTP_PRESC.SERIAL_NO) clinic_no,
               "OUTP_PRESC"."SERIAL_NO" serial_no,
               "OUTP_PRESC"."PRESC_NO" presc_no,
               "OUTP_PRESC"."ITEM_NO" item_no,
               "OUTP_PRESC"."ITEM_CLASS" item_class,
               "OUTP_PRESC"."DRUG_CODE" item_code,
               "OUTP_PRESC"."DRUG_NAME" item_name,
               "OUTP_PRESC"."DRUG_SPEC" item_spec,
               "OUTP_PRESC"."FIRM_ID" firm_id,
               "OUTP_PRESC"."UNITS" units,
               "OUTP_PRESC"."AMOUNT" amount,
               "OUTP_PRESC"."DOSAGE" dosage,
               "OUTP_PRESC"."DOSAGE_UNITS" dosage_units,
               "OUTP_PRESC"."ADMINISTRATION" administration,
               "OUTP_PRESC"."FREQUENCY" frequency,
               "OUTP_PRESC"."CHARGE_INDICATOR" charge_indicator,
               "OUTP_PRESC"."DISPENSARY" PERFORMED_BY,
               "OUTP_PRESC"."REPETITION" repetition,
               "OUTP_PRESC"."ORDER_NO" order_no,
               "OUTP_PRESC"."SUB_ORDER_NO" sub_order_no,
               "OUTP_PRESC".getdrug_flag,
               '' appoint_no,
               0  appoint_item_no,
               "OUTP_PRESC".presc_attr,
               "OUTP_PRESC".freq_detail,
               "OUTP_ORDERS"."DOCTOR" doctor,
               "OUTP_ORDERS"."ORDERED_BY" ordered_by,
               0 aa,
               '6015' ward_code,
               1 appoint_flag ,
               0 itemclass
          FROM "OUTP_PRESC", "OUTP_ORDERS"
         WHERE ("OUTP_PRESC".CLINIC_ID="OUTP_ORDERS".CLINIC_ID)
         and ("OUTP_PRESC".SERIAL_NO="OUTP_ORDERS".SERIAL_NO)
           and ("OUTP_ORDERS".CLINIC_ID = #{id})
           and "OUTP_PRESC"."CHARGE_INDICATOR" = '0'
        union
        SELECT "OUTP_TREAT_REC"."ID" id,to_char("OUTP_TREAT_REC"."VISIT_DATE",'yyyy-mm-dd hh24:mi:ss') visit_date,
               "OUTP_TREAT_REC"."VISIT_NO" visit_no,
               (select patient_id
                  from outp_orders
                 where serial_no = OUTP_TREAT_REC.SERIAL_NO) patient_id,
               (select doctor_no
                  from outp_orders
                 where serial_no = OUTP_TREAT_REC.SERIAL_NO) doctor_no,
               (select clinic_no
                  from outp_orders
                 where serial_no = OUTP_TREAT_REC.SERIAL_NO) clinic_no,
               "OUTP_TREAT_REC"."SERIAL_NO" serial_no,
               0 presc_no,
               "OUTP_TREAT_REC"."ITEM_NO" item_no,
               "OUTP_TREAT_REC"."ITEM_CLASS" item_class,
               "OUTP_TREAT_REC"."ITEM_CODE" item_code,
               "OUTP_TREAT_REC"."ITEM_NAME" item_name,
               "OUTP_TREAT_REC"."ITEM_SPEC" item_spec,
               '' firm_id,
               "OUTP_TREAT_REC"."UNITS" units,
               "OUTP_TREAT_REC"."AMOUNT" amount,
               0 DOSAGE,
               '' DOSAGE_UNITS,
               '' ADMINISTRATION,
               "OUTP_TREAT_REC"."FREQUENCY" FREQUENCY,
               "OUTP_TREAT_REC"."CHARGE_INDICATOR" CHARGE_INDICATOR,
               "OUTP_TREAT_REC"."PERFORMED_BY" PERFORMED_BY,
               0 REPETITION,
               "OUTP_TREAT_REC"."ITEM_NO" order_no,
               1 SUB_ORDER_NO,
               1 getdrug_flag,
               nvl("OUTP_TREAT_REC".appoint_no , OUTP_TREAT_REC.SERIAL_NO) appoint_no ,
               nvl("OUTP_TREAT_REC".appoint_item_no , OUTP_TREAT_REC.ITEM_NO) appoint_item_no,
               '' presc_attr,
               '' freq_detail,
               "OUTP_ORDERS"."DOCTOR" doctor,
               "OUTP_ORDERS"."ORDERED_BY" ordered_by,
               0 aa,
               "OUTP_TREAT_REC"."WARD_CODE" ward_code,
               0 appoint_flag   ,
               1 itemclass
          FROM "OUTP_TREAT_REC", "OUTP_ORDERS"
         WHERE ("OUTP_TREAT_REC".CLINIC_ID="OUTP_ORDERS".CLINIC_ID)
         and ("OUTP_TREAT_REC".SERIAL_NO="OUTP_ORDERS".SERIAL_NO)
           and ("OUTP_ORDERS".CLINIC_ID = #{id})
           and "OUTP_TREAT_REC"."CHARGE_INDICATOR" = '0'
    </select>
	<select id="getTotalAccount" resultType="ClinicMaster">
		select sum(nvl(REGIST_FEE, 0) + nvl(CLINIC_FEE, 0) + nvl(OTHER_FEE, 0)) as "totalCosts"
		,sum(nvl(REGIST_FEE, 0) + nvl(CLINIC_FEE, 0) + nvl(OTHER_FEE, 0)-nvl(clinic_charge, 0)) as "refundAmount",sum(nvl(clinic_charge, 0)) as "totalIncomes"
		from clinic_master
		<where>
			del_flag='0'
			and  acct_No is null
			and (REGISTRATION_STATUS = 1 or REGISTRATION_STATUS = 2)
			<if test="registeringDate!=null">
				and REGISTERING_DATE &lt;=
				TO_DATE(#{registeringDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test="operator!=null and operator!=''">
				and OPERATOR = #{operator}
			</if>
		</where>
	</select>
	<select id="getCheckItem" resultType="ClinicMaster">
		select sum(nvl(REGIST_FEE, 0)) AS "registFee",
		sum(nvl(CLINIC_FEE, 0)) AS "clinicFee",
		sum(nvl(OTHER_FEE, 0)) AS "otherFee"
		from clinic_master
		<where>
			del_flag='0'
			and  acct_No is null
			and (REGISTRATION_STATUS = 1 or REGISTRATION_STATUS = 2)
			<if test="registeringDate!=null">
				and REGISTERING_DATE &lt;=
				TO_DATE(#{registeringDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test="operator!=null and operator!=''">
				and OPERATOR = #{operator}
			</if>
		</where>
	</select>
<select id="getRegiNum" resultType="Double">
	select count(1)
	from CLINIC_MASTER
	<where>
		del_flag='0'
		and  acct_No is null
		and (REGISTRATION_STATUS = 1 or REGISTRATION_STATUS = 2)
		<if test="registeringDate!=null">
			and REGISTERING_DATE &lt;=
			TO_DATE(#{registeringDate}, 'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test="operator!=null and operator!=''">
			and OPERATOR = #{operator}
		</if>
	</where>
</select>
	<select id="getGroupData" resultType="ClinicMaster">
		select pay_way as "payWay",sum(nvl(REGIST_FEE, 0) + nvl(CLINIC_FEE, 0) + nvl(OTHER_FEE, 0)) as "totalCosts"
		,sum(nvl(clinic_charge, 0)-nvl(REGIST_FEE, 0)-nvl(CLINIC_FEE, 0)-nvl(OTHER_FEE, 0)) as "refundAmount",sum(nvl(clinic_charge, 0)) as "clinicCharge"
		from CLINIC_MASTER
		<where>
			del_flag='0'
			and  acct_No is null
			and (REGISTRATION_STATUS = 1 or REGISTRATION_STATUS = 2)
			<if test="registeringDate!=null">
				and REGISTERING_DATE &lt;=
				TO_DATE(#{registeringDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test="operator!=null and operator!=''">
				and OPERATOR = #{operator}
			</if>
		</where>
		group by pay_way

	</select>
	<update id="updateMaster">
		update CLINIC_MASTER set acct_no =#{acctNo} , acct_date_time =SYSDATE
		<where>
			del_flag='0'
			and  acct_No is null
			and clinic_label is not null
			<if test="registeringDate!=null">
				and REGISTERING_DATE &lt;=
				TO_DATE(#{registeringDate}, 'YYYY-MM-DD HH24:MI:SS')
			</if>
			<if test="operator!=null and operator!=''">
				and OPERATOR = #{operator}
			</if>
		</where>
	</update>
</mapper>